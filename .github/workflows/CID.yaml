name: CI

on:
  push:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: blog
  RUN_REGION: europe-west1

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Deploy to GCR

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup gcloud CLI

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      # Print gcloud info
      - name: Info
        run: gcloud info

      - name: Login to docker.io
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies with fallback
        run: |
          yarn install --network-timeout 100000 --registry https://registry.npmjs.org || \
          yarn install --network-timeout 100000 --registry https://registry.yarnpkg.com || \
          npm install

      - run: yarn lint
      - run: yarn build

      - run: yarn docker:build
      - run: yarn docker:push

      - name: Ensure OPEN_AI_KEY secret exists
        run: |-
          if [ -z "${{ secrets.OPEN_AI_KEY }}" ]; then
            echo "OPEN_AI_KEY secret not set in GitHub Actions"; exit 1;
          fi
          if gcloud secrets describe OPEN_AI_KEY --project "$PROJECT_ID" >/dev/null 2>&1; then
            echo -n "${{ secrets.OPEN_AI_KEY }}" | gcloud secrets versions add OPEN_AI_KEY --project "$PROJECT_ID" --data-file=-
          else
            echo -n "${{ secrets.OPEN_AI_KEY }}" | gcloud secrets create OPEN_AI_KEY --project "$PROJECT_ID" --data-file=-
          fi

      # Deploy image to Cloud Run
      - name: Deploy
        id: deploy
        run: |-
          gcloud run deploy blog \
            --quiet \
            --region "$RUN_REGION" \
            --image "docker.io/huangjien/website:latest" \
            --platform "managed" \
            --port 8080 \
            --update-secrets OPEN_AI_KEY=OPEN_AI_KEY:latest \
            --allow-unauthenticated

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
